{"ast":null,"code":"import _slicedToArray from \"/Users/ops03/Desktop/tic-tac-toe/front-end/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ops03/Desktop/tic-tac-toe/front-end/src/components/board.js\";\nimport React from 'react';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null)\n    };\n  }\n\n  renderSquare(i) {\n    return React.createElement(\"button\", {\n      onClick: () => this.handleClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, this.state.squares[i]);\n  }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n\n    if (this.winner(squares) || squares[i]) {\n      axios.get(\"http://127.0.0.1:9393/increaseWins?name=\".concat(name));\n      this.getUser(name);\n      return;\n    }\n\n    if (this.full(squares) === true) {\n      return;\n    }\n\n    squares[i] = this.state.isNext ? 'X' : 'O';\n    this.setState({\n      squares: squares,\n      isNext: !this.state.isNext\n    });\n  }\n\n  winner(squares) {\n    const win_combination = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    for (let i = 0; i < win_combination.length; i++) {\n      const _win_combination$i = _slicedToArray(win_combination[i], 3),\n            a = _win_combination$i[0],\n            b = _win_combination$i[1],\n            c = _win_combination$i[2];\n\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n\n    return null;\n  }\n\n  full(squares) {\n    let count = 0;\n    squares.forEach(function (item) {\n      if (item !== null) {\n        count++;\n      }\n    });\n\n    if (count === 9) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  restart() {\n    this.squares = Array(9).fill(null);\n  }\n\n  render() {\n    const winner = this.winner(this.state.squares);\n    const isFilled = this.full(this.state.squares);\n    let status;\n\n    if (winner) {\n      status = 'The winner is: ' + winner;\n    } else if (!winner && isFilled) {\n      status = 'Game drawn';\n    } else {\n      status = 'Now ' + (this.state.isNext ? 'X' : 'O') + '\\'s turn';\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, status), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)), React.createElement(\"form\", {\n      action: this.restart(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"New game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/ops03/Desktop/tic-tac-toe/front-end/src/components/board.js"],"names":["React","Board","Component","constructor","props","state","squares","Array","fill","renderSquare","i","handleClick","slice","winner","axios","get","name","getUser","full","isNext","setState","win_combination","length","a","b","c","count","forEach","item","restart","render","isFilled","status"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {squares: Array(9).fill(null)};\n    }\n\n    renderSquare(i) {\n        return <button onClick={() => this.handleClick(i)}>{this.state.squares[i]}</button>\n    }\n\n    handleClick(i) {\n        const squares = this.state.squares.slice();\n\t\tif (this.winner(squares) || squares[i]) {\n            axios.get(`http://127.0.0.1:9393/increaseWins?name=${ name }`);\n            this.getUser(name)\n            return;\n\n\t\t}\n\n\t\tif(this.full(squares) === true) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tsquares[i] = this.state.isNext ? 'X' : 'O';\n\t\tthis.setState({\n\t\t\tsquares: squares,\n\t\t\tisNext: !this.state.isNext\n\t\t});\n    }\n\n    winner(squares) {\n        const win_combination = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6],\n        ];\n      \n        for (let i = 0; i < win_combination.length; i++) {\n            const [a, b, c] = win_combination[i];\n            if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n                return squares[a];\n            }\n        }\n      \n        return null;\n    }\n\n    full(squares) {\n        let count = 0;\n        squares.forEach(function (item) {\n            if (item !== null) {\n                count++;\n            }\n        });\n        if(count === 9) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    restart() {\n        this.squares = Array(9).fill(null);\n    }\n\n\n  render() {\n    const winner = this.winner(this.state.squares);\n    const isFilled = this.full(this.state.squares);\n    let status;\n    if (winner) {\n        status = 'The winner is: ' + winner;\n    } else if(!winner && isFilled) {\n        status = 'Game drawn';\n    } else {\n        status = 'Now ' + (this.state.isNext ? 'X' : 'O') + '\\'s turn';\n    }\n\n    return (\n    <div className=\"container\">\n        <h1 className=\"status\">{status}</h1>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n        <form action={this.restart()}>\n            <input type=\"submit\" value=\"New game\"/>\n        </form>\n    </div>\n    )\n  }\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}
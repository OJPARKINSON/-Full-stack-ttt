{"ast":null,"code":"import _slicedToArray from \"/Users/ops03/Desktop/tic-tac-toe/front-end/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ops03/Desktop/tic-tac-toe/front-end/src/components/board.js\";\nimport React from 'react';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      fc: 0,\n      isNext: \"O\"\n    };\n  }\n\n  componentDidMount() {\n    this.play();\n  }\n\n  componentDidUpdate(prevProps, prevState) {}\n\n  play() {\n    this.setState({\n      squares: Array(9).fill(null)\n    });\n    this.emptyIndexies(this.state.squares);\n    var aiPlayer = \"X\";\n\n    if (this.state.isNext = \"X\") {\n      console.log(\"gss\");\n      this.handlePick(this.minimax(this.state.squares, aiPlayer).index);\n    }\n  }\n\n  renderSquare(i) {\n    return React.createElement(\"button\", {\n      onClick: () => this.handlePick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, this.state.squares[i]);\n  }\n\n  handlePick(i) {\n    const squares = this.state.squares;\n    console.log(\"update\" + i);\n\n    if (this.winner(squares)) {\n      console.log(\"winner\");\n      return;\n    }\n\n    if (this.full(squares) === \"X\" || this.full(squares) === \"O\") {\n      console.log(\"full\");\n      return;\n    }\n\n    var aiPlayer = \"X\";\n    var huPlayer = \"O\";\n    squares[i] = this.state.isNext ? aiPlayer : huPlayer;\n    this.setState({\n      squares: squares,\n      isNext: !this.state.isNext\n    });\n  }\n\n  minimax(newBoard, player) {\n    if (this.winner(this.state.squares)) {\n      return;\n    } else if (!this.winner(this.state.squares) && this.isFilled) {\n      return;\n    }\n\n    var updatedFC = this.state.fc + 1;\n    this.setState({\n      fc: updatedFC\n    });\n    console.log(this.state.fc);\n    var availSpots = this.emptyIndexies(newBoard);\n    var huPlayer = \"O\";\n    var aiPlayer = \"X\";\n\n    if (this.winning(newBoard, huPlayer)) {\n      console.log(\"Huwinning\");\n      return {\n        score: -10\n      };\n    } else if (this.winning(newBoard, aiPlayer)) {\n      console.log(\"Aiwinning\");\n      return {\n        score: 10\n      };\n    } else if (availSpots.length === 0) {\n      console.log(\"winning\");\n      return {\n        score: 0\n      };\n    }\n\n    var moves = [];\n\n    for (var i = 0; i < availSpots.length; i++) {\n      var move = {};\n      var result = 0;\n      newBoard[availSpots[i]] = player;\n\n      if (player === aiPlayer) {\n        result = this.minimax(newBoard, huPlayer);\n        move.score = result.score;\n      } else {\n        result = this.minimax(newBoard, aiPlayer);\n        move.score = result.score;\n      }\n\n      newBoard[availSpots[i]] = move.index;\n      moves.push(move);\n    }\n\n    var bestMove;\n\n    if (player === aiPlayer) {\n      var bestScore = -10000;\n\n      for (var i = 0; i < moves.length; i++) {\n        if (moves[i].score > bestScore) {\n          bestScore = moves[i].score;\n          bestMove = i;\n        }\n      }\n    } else {\n      var bestScore = 10000;\n\n      for (var i = 0; i < moves.length; i++) {\n        if (moves[i].score < bestScore) {\n          bestScore = moves[i].score;\n          bestMove = i;\n        }\n      }\n    }\n\n    console.log(moves[bestMove]);\n    return moves[bestMove];\n  }\n\n  full(squares) {\n    let count = 0;\n    squares.forEach(function (item) {\n      if (item !== null) {\n        count++;\n      }\n    });\n\n    if (count === 9) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  winning(board, player) {\n    if (board[0] === player && board[1] === player && board[2] === player || board[3] === player && board[4] === player && board[5] === player || board[6] === player && board[7] === player && board[8] === player || board[0] === player && board[3] === player && board[6] === player || board[1] === player && board[4] === player && board[7] === player || board[2] === player && board[5] === player && board[8] === player || board[0] === player && board[4] === player && board[8] === player || board[2] === player && board[4] === player && board[6] === player) {\n      console.log(\"this user is winning\");\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  winner(squares) {\n    const win_combination = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    for (let i = 0; i < win_combination.length; i++) {\n      const _win_combination$i = _slicedToArray(win_combination[i], 3),\n            a = _win_combination$i[0],\n            b = _win_combination$i[1],\n            c = _win_combination$i[2];\n\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        if (squares[a] === \"O\") {\n          this.play();\n        } else {\n          this.play();\n        }\n\n        return squares[a];\n      }\n    }\n\n    return null;\n  }\n\n  emptyIndexies(board) {\n    return board.filter(s => s !== \"O\" && s !== \"X\");\n  }\n\n  render() {\n    const winner = this.winner(this.state.squares);\n    const isFilled = this.full(this.state.squares);\n    let status;\n\n    if (winner) {\n      status = 'The winner is: ' + winner;\n    } else if (!this.winner(this.state.squares) && isFilled) {\n      status = 'Game drawn';\n    } else {\n      status = 'Now ' + (this.state.isNext ? 'X' : 'O') + '\\'s turn';\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, status), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)), React.createElement(\"form\", {\n      action: this.emptyIndexies(this.state.squares),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"New game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/ops03/Desktop/tic-tac-toe/front-end/src/components/board.js"],"names":["React","Board","Component","constructor","props","state","squares","Array","fill","fc","isNext","componentDidMount","play","componentDidUpdate","prevProps","prevState","setState","emptyIndexies","aiPlayer","console","log","handlePick","minimax","index","renderSquare","i","winner","full","huPlayer","newBoard","player","isFilled","updatedFC","availSpots","winning","score","length","moves","move","result","push","bestMove","bestScore","count","forEach","item","board","win_combination","a","b","c","filter","s","render","status"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,OAAO,EAAEC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAAV;AAA+BC,MAAAA,EAAE,EAAE,CAAnC;AAAsCC,MAAAA,MAAM,EAAE;AAA9C,KAAb;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,IAAL;AACH;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB,CAExC;;AAEDH,EAAAA,IAAI,GAAG;AACH,SAAKI,QAAL,CAAc;AAACV,MAAAA,OAAO,EAAEC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd;AAAV,KAAd;AACA,SAAKS,aAAL,CAAmB,KAAKZ,KAAL,CAAWC,OAA9B;AACA,QAAIY,QAAQ,GAAG,GAAf;;AACA,QAAI,KAAKb,KAAL,CAAWK,MAAX,GAAoB,GAAxB,EAA6B;AACzBS,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,WAAKC,UAAL,CAAgB,KAAKC,OAAL,CAAa,KAAKjB,KAAL,CAAWC,OAAxB,EAAiCY,QAAjC,EAA2CK,KAA3D;AACH;AACJ;;AAEDC,EAAAA,YAAY,CAACC,CAAD,EAAI;AACZ,WAAO;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKJ,UAAL,CAAgBI,CAAhB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4C,KAAKpB,KAAL,CAAWC,OAAX,CAAmBmB,CAAnB,CAA5C,CAAP;AACH;;AAEDJ,EAAAA,UAAU,CAACI,CAAD,EAAI;AACV,UAAMnB,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAA3B;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAWK,CAAvB;;AACN,QAAI,KAAKC,MAAL,CAAYpB,OAAZ,CAAJ,EAA0B;AAChBa,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA;AACT;;AAED,QAAG,KAAKO,IAAL,CAAUrB,OAAV,MAAuB,GAAvB,IAA8B,KAAKqB,IAAL,CAAUrB,OAAV,MAAuB,GAAxD,EAA8D;AACpDa,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACT;AACM;;AAED,QAAIF,QAAQ,GAAG,GAAf;AACA,QAAIU,QAAQ,GAAG,GAAf;AACNtB,IAAAA,OAAO,CAACmB,CAAD,CAAP,GAAa,KAAKpB,KAAL,CAAWK,MAAX,GAAoBQ,QAApB,GAA+BU,QAA5C;AACA,SAAKZ,QAAL,CAAc;AACbV,MAAAA,OAAO,EAAEA,OADI;AAEbI,MAAAA,MAAM,EAAE,CAAC,KAAKL,KAAL,CAAWK;AAFP,KAAd;AAKG;;AAEDY,EAAAA,OAAO,CAACO,QAAD,EAAWC,MAAX,EAAkB;AACrB,QAAI,KAAKJ,MAAL,CAAY,KAAKrB,KAAL,CAAWC,OAAvB,CAAJ,EAAqC;AACjC;AACH,KAFD,MAEO,IAAG,CAAC,KAAKoB,MAAL,CAAY,KAAKrB,KAAL,CAAWC,OAAvB,CAAD,IAAoC,KAAKyB,QAA5C,EAAsD;AACzD;AACH;;AAED,QAAIC,SAAS,GAAG,KAAK3B,KAAL,CAAWI,EAAX,GAAgB,CAAhC;AACA,SAAKO,QAAL,CAAc;AAACP,MAAAA,EAAE,EAAEuB;AAAL,KAAd;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWI,EAAvB;AACA,QAAIwB,UAAU,GAAG,KAAKhB,aAAL,CAAmBY,QAAnB,CAAjB;AACA,QAAID,QAAQ,GAAG,GAAf;AACA,QAAIV,QAAQ,GAAG,GAAf;;AACA,QAAI,KAAKgB,OAAL,CAAaL,QAAb,EAAuBD,QAAvB,CAAJ,EAAqC;AACjCT,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD,aAAO;AAACe,QAAAA,KAAK,EAAC,CAAC;AAAR,OAAP;AACF,KAHD,MAIK,IAAI,KAAKD,OAAL,CAAaL,QAAb,EAAuBX,QAAvB,CAAJ,EAAqC;AACtCC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACF,aAAO;AAACe,QAAAA,KAAK,EAAC;AAAP,OAAP;AACC,KAHE,MAIA,IAAIF,UAAU,CAACG,MAAX,KAAsB,CAA1B,EAA4B;AAC7BjB,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,aAAO;AAACe,QAAAA,KAAK,EAAC;AAAP,OAAP;AACH;;AACD,QAAIE,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAIZ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGQ,UAAU,CAACG,MAA/B,EAAuCX,CAAC,EAAxC,EAA2C;AACvC,UAAIa,IAAI,GAAG,EAAX;AACA,UAAIC,MAAM,GAAG,CAAb;AACAV,MAAAA,QAAQ,CAACI,UAAU,CAACR,CAAD,CAAX,CAAR,GAA0BK,MAA1B;;AACA,UAAIA,MAAM,KAAKZ,QAAf,EAAwB;AACpBqB,QAAAA,MAAM,GAAG,KAAKjB,OAAL,CAAaO,QAAb,EAAuBD,QAAvB,CAAT;AACAU,QAAAA,IAAI,CAACH,KAAL,GAAaI,MAAM,CAACJ,KAApB;AACH,OAHD,MAII;AACJI,QAAAA,MAAM,GAAG,KAAKjB,OAAL,CAAaO,QAAb,EAAuBX,QAAvB,CAAT;AACAoB,QAAAA,IAAI,CAACH,KAAL,GAAaI,MAAM,CAACJ,KAApB;AACC;;AAEDN,MAAAA,QAAQ,CAACI,UAAU,CAACR,CAAD,CAAX,CAAR,GAA0Ba,IAAI,CAACf,KAA/B;AACAc,MAAAA,KAAK,CAACG,IAAN,CAAWF,IAAX;AACH;;AACD,QAAIG,QAAJ;;AACA,QAAGX,MAAM,KAAKZ,QAAd,EAAuB;AACrB,UAAIwB,SAAS,GAAG,CAAC,KAAjB;;AACA,WAAI,IAAIjB,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGY,KAAK,CAACD,MAAzB,EAAiCX,CAAC,EAAlC,EAAqC;AACnC,YAAGY,KAAK,CAACZ,CAAD,CAAL,CAASU,KAAT,GAAiBO,SAApB,EAA8B;AAC5BA,UAAAA,SAAS,GAAGL,KAAK,CAACZ,CAAD,CAAL,CAASU,KAArB;AACAM,UAAAA,QAAQ,GAAGhB,CAAX;AACD;AACF;AACF,KARD,MAQK;AACH,UAAIiB,SAAS,GAAG,KAAhB;;AACA,WAAI,IAAIjB,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGY,KAAK,CAACD,MAAzB,EAAiCX,CAAC,EAAlC,EAAqC;AACnC,YAAGY,KAAK,CAACZ,CAAD,CAAL,CAASU,KAAT,GAAiBO,SAApB,EAA8B;AAC5BA,UAAAA,SAAS,GAAGL,KAAK,CAACZ,CAAD,CAAL,CAASU,KAArB;AACAM,UAAAA,QAAQ,GAAGhB,CAAX;AACD;AACF;AACF;;AACDN,IAAAA,OAAO,CAACC,GAAR,CAAYiB,KAAK,CAACI,QAAD,CAAjB;AACA,WAAOJ,KAAK,CAACI,QAAD,CAAZ;AACH;;AAEDd,EAAAA,IAAI,CAACrB,OAAD,EAAU;AACV,QAAIqC,KAAK,GAAG,CAAZ;AACArC,IAAAA,OAAO,CAACsC,OAAR,CAAgB,UAAUC,IAAV,EAAgB;AAC5B,UAAIA,IAAI,KAAK,IAAb,EAAmB;AACfF,QAAAA,KAAK;AACR;AACJ,KAJD;;AAKA,QAAGA,KAAK,KAAK,CAAb,EAAgB;AACZ,aAAO,IAAP;AACH,KAFD,MAEO;AACH,aAAO,KAAP;AACH;AACJ;;AAEDT,EAAAA,OAAO,CAACY,KAAD,EAAOhB,MAAP,EAAe;AAClB,QACKgB,KAAK,CAAC,CAAD,CAAL,KAAahB,MAAb,IAAuBgB,KAAK,CAAC,CAAD,CAAL,KAAahB,MAApC,IAA8CgB,KAAK,CAAC,CAAD,CAAL,KAAahB,MAA5D,IACCgB,KAAK,CAAC,CAAD,CAAL,KAAahB,MAAb,IAAuBgB,KAAK,CAAC,CAAD,CAAL,KAAahB,MAApC,IAA8CgB,KAAK,CAAC,CAAD,CAAL,KAAahB,MAD5D,IAECgB,KAAK,CAAC,CAAD,CAAL,KAAahB,MAAb,IAAuBgB,KAAK,CAAC,CAAD,CAAL,KAAahB,MAApC,IAA8CgB,KAAK,CAAC,CAAD,CAAL,KAAahB,MAF5D,IAGCgB,KAAK,CAAC,CAAD,CAAL,KAAahB,MAAb,IAAuBgB,KAAK,CAAC,CAAD,CAAL,KAAahB,MAApC,IAA8CgB,KAAK,CAAC,CAAD,CAAL,KAAahB,MAH5D,IAICgB,KAAK,CAAC,CAAD,CAAL,KAAahB,MAAb,IAAuBgB,KAAK,CAAC,CAAD,CAAL,KAAahB,MAApC,IAA8CgB,KAAK,CAAC,CAAD,CAAL,KAAahB,MAJ5D,IAKCgB,KAAK,CAAC,CAAD,CAAL,KAAahB,MAAb,IAAuBgB,KAAK,CAAC,CAAD,CAAL,KAAahB,MAApC,IAA8CgB,KAAK,CAAC,CAAD,CAAL,KAAahB,MAL5D,IAMCgB,KAAK,CAAC,CAAD,CAAL,KAAahB,MAAb,IAAuBgB,KAAK,CAAC,CAAD,CAAL,KAAahB,MAApC,IAA8CgB,KAAK,CAAC,CAAD,CAAL,KAAahB,MAN5D,IAOCgB,KAAK,CAAC,CAAD,CAAL,KAAahB,MAAb,IAAuBgB,KAAK,CAAC,CAAD,CAAL,KAAahB,MAApC,IAA8CgB,KAAK,CAAC,CAAD,CAAL,KAAahB,MARhE,EASM;AACFX,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,aAAO,IAAP;AACH,KAZD,MAYO;AAEH,aAAO,KAAP;AACH;AACJ;;AAEDM,EAAAA,MAAM,CAACpB,OAAD,EAAU;AACZ,UAAMyC,eAAe,GAAG,CACpB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADoB,EAEpB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFoB,EAGpB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHoB,EAIpB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJoB,EAKpB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALoB,EAMpB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANoB,EAOpB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPoB,EAQpB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARoB,CAAxB;;AAWA,SAAK,IAAItB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsB,eAAe,CAACX,MAApC,EAA4CX,CAAC,EAA7C,EAAiD;AAAA,gDAC3BsB,eAAe,CAACtB,CAAD,CADY;AAAA,YACtCuB,CADsC;AAAA,YACnCC,CADmC;AAAA,YAChCC,CADgC;;AAE7C,UAAI5C,OAAO,CAAC0C,CAAD,CAAP,IAAc1C,OAAO,CAAC0C,CAAD,CAAP,KAAe1C,OAAO,CAAC2C,CAAD,CAApC,IAA2C3C,OAAO,CAAC0C,CAAD,CAAP,KAAe1C,OAAO,CAAC4C,CAAD,CAArE,EAA0E;AACtE,YAAI5C,OAAO,CAAC0C,CAAD,CAAP,KAAe,GAAnB,EAAwB;AAEpB,eAAKpC,IAAL;AACH,SAHD,MAGO;AAGH,eAAKA,IAAL;AACH;;AACD,eAAON,OAAO,CAAC0C,CAAD,CAAd;AACH;AACJ;;AAED,WAAO,IAAP;AACH;;AAED/B,EAAAA,aAAa,CAAC6B,KAAD,EAAO;AAChB,WAAOA,KAAK,CAACK,MAAN,CAAaC,CAAC,IAAIA,CAAC,KAAK,GAAN,IAAaA,CAAC,KAAK,GAArC,CAAP;AACH;;AAEHC,EAAAA,MAAM,GAAG;AACP,UAAM3B,MAAM,GAAG,KAAKA,MAAL,CAAY,KAAKrB,KAAL,CAAWC,OAAvB,CAAf;AACA,UAAMyB,QAAQ,GAAG,KAAKJ,IAAL,CAAU,KAAKtB,KAAL,CAAWC,OAArB,CAAjB;AACA,QAAIgD,MAAJ;;AACA,QAAI5B,MAAJ,EAAY;AACR4B,MAAAA,MAAM,GAAG,oBAAoB5B,MAA7B;AACH,KAFD,MAEO,IAAG,CAAC,KAAKA,MAAL,CAAY,KAAKrB,KAAL,CAAWC,OAAvB,CAAD,IAAoCyB,QAAvC,EAAiD;AACpDuB,MAAAA,MAAM,GAAG,YAAT;AACH,KAFM,MAEA;AACHA,MAAAA,MAAM,GAAG,UAAU,KAAKjD,KAAL,CAAWK,MAAX,GAAoB,GAApB,GAA0B,GAApC,IAA2C,UAApD;AACH;;AAED,WACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwB4C,MAAxB,CADJ,EAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAK9B,YAAL,CAAkB,CAAlB,CADH,EAEG,KAAKA,YAAL,CAAkB,CAAlB,CAFH,EAGG,KAAKA,YAAL,CAAkB,CAAlB,CAHH,CAFJ,EAOI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKA,YAAL,CAAkB,CAAlB,CADH,EAEG,KAAKA,YAAL,CAAkB,CAAlB,CAFH,EAGG,KAAKA,YAAL,CAAkB,CAAlB,CAHH,CAPJ,EAYI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKA,YAAL,CAAkB,CAAlB,CADH,EAEG,KAAKA,YAAL,CAAkB,CAAlB,CAFH,EAGG,KAAKA,YAAL,CAAkB,CAAlB,CAHH,CAZJ,EAiBI;AAAM,MAAA,MAAM,EAAE,KAAKP,aAAL,CAAmB,KAAKZ,KAAL,CAAWC,OAA9B,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAjBJ,CADA;AAuBD;;AAzNiC;;AA4NpC,eAAeL,KAAf","sourcesContent":["import React from 'react';\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {squares: Array(9).fill(null), fc: 0, isNext: \"O\"};\n    }\n\n    componentDidMount() {\n        this.play()\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n    }\n\n    play() {\n        this.setState({squares: Array(9).fill(null)})\n        this.emptyIndexies(this.state.squares);\n        var aiPlayer = \"X\";\n        if (this.state.isNext = \"X\") {\n            console.log(\"gss\")\n            this.handlePick(this.minimax(this.state.squares, aiPlayer).index);\n        }\n    }\n\n    renderSquare(i) {\n        return <button onClick={() => this.handlePick(i)}>{this.state.squares[i]}</button>\n    }\n\n    handlePick(i) {\n        const squares = this.state.squares;\n        console.log(\"update\" + i)\n\t\tif (this.winner(squares)) {\n            console.log(\"winner\")\n            return;\n\t\t}\n\n\t\tif(this.full(squares) === \"X\" || this.full(squares) === \"O\" ) {\n            console.log(\"full\")\n\t\t\treturn;\n        }\n\n        var aiPlayer = \"X\";\n        var huPlayer = \"O\";\n\t\tsquares[i] = this.state.isNext ? aiPlayer : huPlayer;\n\t\tthis.setState({\n\t\t\tsquares: squares,\n\t\t\tisNext: !this.state.isNext\n        });\n        \n    }\n\n    minimax(newBoard, player){\n        if (this.winner(this.state.squares)) {\n            return;\n        } else if(!this.winner(this.state.squares) && this.isFilled) {\n            return;\n        }\n\n        var updatedFC = this.state.fc + 1\n        this.setState({fc: updatedFC});\n        console.log(this.state.fc);\n        var availSpots = this.emptyIndexies(newBoard);\n        var huPlayer = \"O\";\n        var aiPlayer = \"X\";\n        if (this.winning(newBoard, huPlayer)){\n            console.log(\"Huwinning\")\n           return {score:-10};\n        }\n        else if (this.winning(newBoard, aiPlayer)){\n            console.log(\"Aiwinning\")\n          return {score:10};\n          }\n        else if (availSpots.length === 0){\n            console.log(\"winning\")\n            return {score:0};\n        }\n        var moves = [];\n        for (var i = 0; i < availSpots.length; i++){\n            var move = {};\n            var result = 0;\n            newBoard[availSpots[i]] = player;\n            if (player === aiPlayer){\n                result = this.minimax(newBoard, huPlayer);\n                move.score = result.score;\n            }\n            else{\n            result = this.minimax(newBoard, aiPlayer);\n            move.score = result.score;\n            }\n        \n            newBoard[availSpots[i]] = move.index;\n            moves.push(move);\n        }\n        var bestMove;\n        if(player === aiPlayer){\n          var bestScore = -10000;\n          for(var i = 0; i < moves.length; i++){\n            if(moves[i].score > bestScore){\n              bestScore = moves[i].score;\n              bestMove = i;\n            }\n          }\n        }else{\n          var bestScore = 10000;\n          for(var i = 0; i < moves.length; i++){\n            if(moves[i].score < bestScore){\n              bestScore = moves[i].score;\n              bestMove = i;\n            }\n          }\n        }\n        console.log(moves[bestMove])\n        return moves[bestMove];\n    }\n\n    full(squares) {\n        let count = 0;\n        squares.forEach(function (item) {\n            if (item !== null) {\n                count++;\n            }\n        });\n        if(count === 9) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    winning(board,player) {\n        if (\n            (board[0] === player && board[1] === player && board[2] === player) ||\n            (board[3] === player && board[4] === player && board[5] === player) ||\n            (board[6] === player && board[7] === player && board[8] === player) ||\n            (board[0] === player && board[3] === player && board[6] === player) ||\n            (board[1] === player && board[4] === player && board[7] === player) ||\n            (board[2] === player && board[5] === player && board[8] === player) ||\n            (board[0] === player && board[4] === player && board[8] === player) ||\n            (board[2] === player && board[4] === player && board[6] === player)\n            ) {\n            console.log(\"this user is winning\")\n            return true;\n        } else {\n            \n            return false;\n        }\n    }\n\n    winner(squares) {\n        const win_combination = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6],\n        ];\n      \n        for (let i = 0; i < win_combination.length; i++) {\n            const [a, b, c] = win_combination[i];\n            if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n                if (squares[a] === \"O\") {\n\n                    this.play()\n                } else {\n \n            \n                    this.play()\n                }\n                return squares[a];\n            }\n        }\n      \n        return null;\n    }\n\n    emptyIndexies(board){\n        return board.filter(s => s !== \"O\" && s !== \"X\");\n    }\n\n  render() {\n    const winner = this.winner(this.state.squares);\n    const isFilled = this.full(this.state.squares);\n    let status;\n    if (winner) {\n        status = 'The winner is: ' + winner;\n    } else if(!this.winner(this.state.squares) && isFilled) {\n        status = 'Game drawn';\n    } else {\n        status = 'Now ' + (this.state.isNext ? 'X' : 'O') + '\\'s turn';\n    }\n\n    return (\n    <div className=\"container\">\n        <h1 className=\"status\">{status}</h1>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n        <form action={this.emptyIndexies(this.state.squares)}>\n            <input type=\"submit\" value=\"New game\"/>\n        </form>\n    </div>\n    )\n  }\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}
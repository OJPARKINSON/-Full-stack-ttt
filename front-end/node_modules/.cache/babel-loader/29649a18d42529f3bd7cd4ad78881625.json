{"ast":null,"code":"import _slicedToArray from \"/Users/ops03/Desktop/tic-tac-toe/front-end/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React from 'react';\nexport function findWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const _lines$i = _slicedToArray(lines[i], 3),\n          a = _lines$i[0],\n          b = _lines$i[1],\n          c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\nexport function isAllSquareClicked(squares) {\n  let count = 0;\n  squares.forEach(function (item) {\n    if (item !== null) {\n      count++;\n    }\n  });\n\n  if (count === 9) {\n    return true;\n  } else {\n    return false;\n  }\n}","map":{"version":3,"sources":["/Users/ops03/Desktop/tic-tac-toe/front-end/src/components/functions.js"],"names":["React","findWinner","squares","lines","i","length","a","b","c","isAllSquareClicked","count","forEach","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,UAAT,CAAoBC,OAApB,EAA6B;AACnC,QAAMC,KAAK,GAAG,CACb,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADa,EAEb,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFa,EAGb,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHa,EAIb,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJa,EAKb,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALa,EAMb,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANa,EAOb,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPa,EAQb,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARa,CAAd;;AAWA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AAAA,oCACpBD,KAAK,CAACC,CAAD,CADe;AAAA,UAC/BE,CAD+B;AAAA,UAC5BC,CAD4B;AAAA,UACzBC,CADyB;;AAEtC,QAAIN,OAAO,CAACI,CAAD,CAAP,IAAcJ,OAAO,CAACI,CAAD,CAAP,KAAeJ,OAAO,CAACK,CAAD,CAApC,IAA2CL,OAAO,CAACI,CAAD,CAAP,KAAeJ,OAAO,CAACM,CAAD,CAArE,EAA0E;AACzE,aAAON,OAAO,CAACI,CAAD,CAAd;AACA;AACD;;AAED,SAAO,IAAP;AACA;AAED,OAAO,SAASG,kBAAT,CAA4BP,OAA5B,EAAqC;AAC3C,MAAIQ,KAAK,GAAG,CAAZ;AACAR,EAAAA,OAAO,CAACS,OAAR,CAAgB,UAAUC,IAAV,EAAgB;AAC/B,QAAIA,IAAI,KAAK,IAAb,EAAmB;AAClBF,MAAAA,KAAK;AACL;AACD,GAJD;;AAKA,MAAGA,KAAK,KAAK,CAAb,EAAgB;AACf,WAAO,IAAP;AACA,GAFD,MAEO;AACN,WAAO,KAAP;AACA;AACD","sourcesContent":["import React from 'react';\n\nexport function findWinner(squares) {\n\tconst lines = [\n\t\t[0, 1, 2],\n\t\t[3, 4, 5],\n\t\t[6, 7, 8],\n\t\t[0, 3, 6],\n\t\t[1, 4, 7],\n\t\t[2, 5, 8],\n\t\t[0, 4, 8],\n\t\t[2, 4, 6],\n\t];\n  \n\tfor (let i = 0; i < lines.length; i++) {\n\t\tconst [a, b, c] = lines[i];\n\t\tif (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n\t\t\treturn squares[a];\n\t\t}\n\t}\n  \n\treturn null;\n}\n\nexport function isAllSquareClicked(squares) {\n\tlet count = 0;\n\tsquares.forEach(function (item) {\n\t\tif (item !== null) {\n\t\t\tcount++;\n\t\t}\n\t});\n\tif(count === 9) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}"]},"metadata":{},"sourceType":"module"}
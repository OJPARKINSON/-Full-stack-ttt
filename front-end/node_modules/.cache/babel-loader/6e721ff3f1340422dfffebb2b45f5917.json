{"ast":null,"code":"import _slicedToArray from \"/Users/ops03/Desktop/tic-tac-toe/front-end/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ops03/Desktop/tic-tac-toe/front-end/src/components/board.js\";\nimport React from 'react';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      fc: 0,\n      isNext: \"X\"\n    };\n  }\n\n  componentDidMount() {\n    this.play();\n  }\n\n  play() {\n    this.setState({\n      squares: Array(9).fill(null)\n    });\n    this.emptyIndexies(this.state.squares);\n    var aiPlayer = \"X\";\n\n    if (this.state.isNext = \"X\") {\n      console.log(this.minimax(this.state.squares, aiPlayer).index);\n      this.handlePick(this.minimax(this.state.squares, aiPlayer).index);\n    }\n  }\n\n  renderSquare(i) {\n    return React.createElement(\"button\", {\n      onClick: () => this.handlePick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, this.state.squares[i]);\n  }\n\n  handlePick(i) {\n    const squares = this.state.squares;\n\n    if (this.winner(squares)) {\n      console.log(\"winner\");\n      return;\n    }\n\n    if (this.full(squares) === \"X\" || this.full(squares) === \"O\") {\n      console.log(\"full\");\n      return;\n    }\n\n    var aiPlayer = \"X\";\n    var huPlayer = \"O\";\n    squares[i] = this.state.isNext ? aiPlayer : huPlayer;\n    this.setState({\n      squares: squares,\n      isNext: !this.state.isNext\n    });\n    console.log(\"update\");\n  }\n\n  minimax(newBoard, player) {\n    if (this.winner(this.state.squares)) {\n      return;\n    } else if (!this.winner(this.state.squares) && this.isFilled) {\n      return;\n    }\n\n    var updatedFC = this.state.fc + 1;\n    this.setState({\n      fc: updatedFC\n    });\n    console.log(this.state.fc);\n    var availSpots = this.emptyIndexies(newBoard);\n    var huPlayer = \"O\";\n    var aiPlayer = \"X\";\n\n    if (this.winning(newBoard, huPlayer)) {\n      console.log(\"winning\");\n      return {\n        score: -10\n      };\n    } else if (this.winning(newBoard, aiPlayer)) {\n      console.log(\"winning\");\n      return {\n        score: 10\n      };\n    } else if (availSpots.length === 0) {\n      console.log(\"winning\");\n      return {\n        score: 0\n      };\n    }\n\n    for (var i = 0; i < availSpots.length; i++) {\n      var move = {};\n      var result = 0;\n      newBoard[availSpots[i]] = player;\n\n      if (player === aiPlayer) {\n        result = this.minimax(newBoard, huPlayer);\n        console.log(result);\n        this.handlePick(result.score);\n      } else {\n        result = this.minimax(newBoard, aiPlayer);\n        this.handlePick(result.score);\n      }\n\n      newBoard[availSpots[i]] = move.index;\n      return this.move.index;\n    }\n  }\n\n  full(squares) {\n    let count = 0;\n    squares.forEach(function (item) {\n      if (item !== null) {\n        count++;\n      }\n    });\n\n    if (count === 9) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  winning(board, player) {\n    if (board[0] == player && board[1] == player && board[2] == player || board[3] === player && board[4] === player && board[5] == player || board[6] === player && board[7] === player && board[8] == player || board[0] === player && board[3] === player && board[6] == player || board[1] === player && board[4] === player && board[7] == player || board[2] === player && board[5] === player && board[8] == player || board[0] === player && board[4] === player && board[8] == player || board[2] === player && board[4] === player && board[6] == player) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  winner(squares) {\n    const win_combination = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    for (let i = 0; i < win_combination.length; i++) {\n      const _win_combination$i = _slicedToArray(win_combination[i], 3),\n            a = _win_combination$i[0],\n            b = _win_combination$i[1],\n            c = _win_combination$i[2];\n\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        if (squares[a] === \"O\") {\n          this.play();\n        } else {\n          this.play();\n        }\n\n        return squares[a];\n      }\n    }\n\n    return null;\n  }\n\n  emptyIndexies(board) {\n    return board.filter(s => s !== \"O\" && s !== \"X\");\n  }\n\n  render() {\n    const winner = this.winner(this.state.squares);\n    const isFilled = this.full(this.state.squares);\n    let status;\n\n    if (winner) {\n      status = 'The winner is: ' + winner;\n    } else if (!this.winner(this.state.squares) && isFilled) {\n      status = 'Game drawn';\n    } else {\n      status = 'Now ' + (this.state.isNext ? 'X' : 'O') + '\\'s turn';\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, status), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)), React.createElement(\"form\", {\n      action: this.emptyIndexies(this.state.squares),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"New game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/ops03/Desktop/tic-tac-toe/front-end/src/components/board.js"],"names":["React","Board","Component","constructor","props","state","squares","Array","fill","fc","isNext","componentDidMount","play","setState","emptyIndexies","aiPlayer","console","log","minimax","index","handlePick","renderSquare","i","winner","full","huPlayer","newBoard","player","isFilled","updatedFC","availSpots","winning","score","length","move","result","count","forEach","item","board","win_combination","a","b","c","filter","s","render","status"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {squares: Array(9).fill(null), fc: 0, isNext: \"X\"};\n    }\n\n    componentDidMount() {\n        this.play()\n    }\n\n    play() {\n        this.setState({squares: Array(9).fill(null)})\n        this.emptyIndexies(this.state.squares);\n        var aiPlayer = \"X\";\n        if (this.state.isNext = \"X\") {\n            console.log(this.minimax(this.state.squares, aiPlayer).index);\n            this.handlePick(this.minimax(this.state.squares, aiPlayer).index);\n        }\n    }\n\n    renderSquare(i) {\n        return <button onClick={() => this.handlePick(i)}>{this.state.squares[i]}</button>\n    }\n\n    handlePick(i) {\n        const squares = this.state.squares;\n\t\tif (this.winner(squares)) {\n            console.log(\"winner\")\n            return;\n\t\t}\n\n\t\tif(this.full(squares) === \"X\" || this.full(squares) === \"O\" ) {\n            console.log(\"full\")\n\t\t\treturn;\n        }\n    \n\n        var aiPlayer = \"X\";\n        var huPlayer = \"O\";\n\t\tsquares[i] = this.state.isNext ? aiPlayer : huPlayer;\n\t\tthis.setState({\n\t\t\tsquares: squares,\n\t\t\tisNext: !this.state.isNext\n        });\n        console.log(\"update\")\n    }\n\n    minimax(newBoard, player){\n        if (this.winner(this.state.squares)) {\n            return;\n        } else if(!this.winner(this.state.squares) && this.isFilled) {\n            return;\n        }\n\n        var updatedFC = this.state.fc + 1\n        this.setState({fc: updatedFC});\n        console.log(this.state.fc);\n        var availSpots = this.emptyIndexies(newBoard);\n        var huPlayer = \"O\";\n        var aiPlayer = \"X\";\n        if (this.winning(newBoard, huPlayer)){\n            console.log(\"winning\")\n           return {score:-10};\n        }\n        else if (this.winning(newBoard, aiPlayer)){\n            console.log(\"winning\")\n          return {score:10};\n          }\n        else if (availSpots.length === 0){\n            console.log(\"winning\")\n            return {score:0};\n        }\n\n        for (var i = 0; i < availSpots.length; i++){\n  \n            var move = {};\n            var result = 0;\n            newBoard[availSpots[i]] = player;\n            if (player === aiPlayer){\n                result = this.minimax(newBoard, huPlayer);\n                console.log(result);\n                this.handlePick(result.score);\n              }\n              else{\n                result = this.minimax(newBoard, aiPlayer);\n                this.handlePick(result.score);\n              }\n        \n            newBoard[availSpots[i]] = move.index;\n            return this.move.index\n        }\n    }\n\n    full(squares) {\n        let count = 0;\n        squares.forEach(function (item) {\n            if (item !== null) {\n                count++;\n            }\n        });\n        if(count === 9) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    winning(board, player) {\n        if (\n            (board[0] == player && board[1] == player && board[2] == player) ||\n            (board[3] === player && board[4] === player && board[5] == player) ||\n            (board[6] === player && board[7] === player && board[8] == player) ||\n            (board[0] === player && board[3] === player && board[6] == player) ||\n            (board[1] === player && board[4] === player && board[7] == player) ||\n            (board[2] === player && board[5] === player && board[8] == player) ||\n            (board[0] === player && board[4] === player && board[8] == player) ||\n            (board[2] === player && board[4] === player && board[6] == player)\n            ) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    winner(squares) {\n        const win_combination = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6],\n        ];\n      \n        for (let i = 0; i < win_combination.length; i++) {\n            const [a, b, c] = win_combination[i];\n            if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n                if (squares[a] === \"O\") {\n\n                    this.play()\n                } else {\n \n            \n                    this.play()\n                }\n                return squares[a];\n            }\n        }\n      \n        return null;\n    }\n\n    emptyIndexies(board){\n        return board.filter(s => s !== \"O\" && s !== \"X\");\n    }\n\n  render() {\n    const winner = this.winner(this.state.squares);\n    const isFilled = this.full(this.state.squares);\n    let status;\n    if (winner) {\n        status = 'The winner is: ' + winner;\n    } else if(!this.winner(this.state.squares) && isFilled) {\n        status = 'Game drawn';\n    } else {\n        status = 'Now ' + (this.state.isNext ? 'X' : 'O') + '\\'s turn';\n    }\n\n    return (\n    <div className=\"container\">\n        <h1 className=\"status\">{status}</h1>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n        <form action={this.emptyIndexies(this.state.squares)}>\n            <input type=\"submit\" value=\"New game\"/>\n        </form>\n    </div>\n    )\n  }\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}
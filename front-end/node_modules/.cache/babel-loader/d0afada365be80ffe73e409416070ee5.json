{"ast":null,"code":"var _jsxFileName = \"/Users/ops03/Desktop/tic-tac-toe/front-end/src/components/board.js\";\nimport React from 'react';\nimport axios from 'axios';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null)\n    };\n  }\n\n  renderSquare(i) {\n    return React.createElement(\"button\", {\n      onClick: () => this.handlePick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, this.state.squares[i]);\n  }\n\n  handlePick(i) {\n    const squares = this.state.squares.slice();\n\n    if (this.winner(squares) || squares[i]) {\n      return;\n    }\n\n    if (this.full(squares) === true) {\n      return;\n    }\n\n    var huPlayer = \"O\";\n    var aiPlayer = \"X\";\n    squares[i] = this.state.isNext ? aiPlayer : huPlayer;\n    this.setState({\n      squares: squares,\n      isNext: !this.state.isNext\n    });\n  }\n\n  minimax(newBoard) {\n    //add one to function calls\n    fc++; //available spots\n\n    var availSpots = emptyIndexies(newBoard); // checks for the terminal states such as win, lose, and tie and returning a value accordingly\n\n    if (winning(newBoard, huPlayer)) {\n      return {\n        score: -10\n      };\n    } else if (winning(newBoard, aiPlayer)) {\n      return {\n        score: 10\n      };\n    } else if (availSpots.length === 0) {\n      return {\n        score: 0\n      };\n    }\n  }\n\n  full(squares) {\n    let count = 0;\n    squares.forEach(function (item) {\n      if (item !== null) {\n        count++;\n      }\n    });\n\n    if (count === 9) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  winning(board, player) {\n    if (board[0] == player && board[1] == player && board[2] == player || board[3] == player && board[4] == player && board[5] == player || board[6] == player && board[7] == player && board[8] == player || board[0] == player && board[3] == player && board[6] == player || board[1] == player && board[4] == player && board[7] == player || board[2] == player && board[5] == player && board[8] == player || board[0] == player && board[4] == player && board[8] == player || board[2] == player && board[4] == player && board[6] == player) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  restart() {\n    this.squares = Array(9).fill(null);\n  }\n\n  render() {\n    const winner = this.winner(this.state.squares);\n    const isFilled = this.full(this.state.squares);\n    let status;\n\n    if (winner) {\n      status = 'The winner is: ' + winner;\n    } else if (!winner && isFilled) {\n      status = 'Game drawn';\n    } else {\n      status = 'Now ' + (this.state.isNext ? 'X' : 'O') + '\\'s turn';\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, status), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)), React.createElement(\"form\", {\n      action: this.restart(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"New game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/ops03/Desktop/tic-tac-toe/front-end/src/components/board.js"],"names":["React","axios","Board","Component","constructor","props","state","squares","Array","fill","renderSquare","i","handlePick","slice","winner","full","huPlayer","aiPlayer","isNext","setState","minimax","newBoard","fc","availSpots","emptyIndexies","winning","score","length","count","forEach","item","board","player","restart","render","isFilled","status"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {squares: Array(9).fill(null)};\n    }\n\n    renderSquare(i) {\n        return <button onClick={() => this.handlePick(i)}>{this.state.squares[i]}</button>\n    }\n\n    handlePick(i) {\n        const squares = this.state.squares.slice();\n\t\tif (this.winner(squares) || squares[i]) {\n            return;\n\t\t}\n\n\t\tif(this.full(squares) === true) {\n\t\t\treturn;\n\t\t}\n        var huPlayer = \"O\";\n        var aiPlayer = \"X\";\n\n\t\tsquares[i] = this.state.isNext ? aiPlayer : huPlayer;\n\t\tthis.setState({\n\t\t\tsquares: squares,\n\t\t\tisNext: !this.state.isNext\n\t\t});\n    }\n\n    minimax(newBoard){\n        //add one to function calls\n        fc++;\n        \n        //available spots\n        var availSpots = emptyIndexies(newBoard);\n      \n        // checks for the terminal states such as win, lose, and tie and returning a value accordingly\n        if (winning(newBoard, huPlayer)){\n           return {score:-10};\n        }\n          else if (winning(newBoard, aiPlayer)){\n          return {score:10};\n          }\n        else if (availSpots.length === 0){\n            return {score:0};\n        }\n    }\n\n    full(squares) {\n        let count = 0;\n        squares.forEach(function (item) {\n            if (item !== null) {\n                count++;\n            }\n        });\n        if(count === 9) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    winning(board, player) {\n        if (\n            (board[0] == player && board[1] == player && board[2] == player) ||\n            (board[3] == player && board[4] == player && board[5] == player) ||\n            (board[6] == player && board[7] == player && board[8] == player) ||\n            (board[0] == player && board[3] == player && board[6] == player) ||\n            (board[1] == player && board[4] == player && board[7] == player) ||\n            (board[2] == player && board[5] == player && board[8] == player) ||\n            (board[0] == player && board[4] == player && board[8] == player) ||\n            (board[2] == player && board[4] == player && board[6] == player)\n            ) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n\n    restart() {\n        this.squares = Array(9).fill(null);\n    }\n\n\n  render() {\n    const winner = this.winner(this.state.squares);\n    const isFilled = this.full(this.state.squares);\n    let status;\n    if (winner) {\n        status = 'The winner is: ' + winner;\n    } else if(!winner && isFilled) {\n        status = 'Game drawn';\n    } else {\n        status = 'Now ' + (this.state.isNext ? 'X' : 'O') + '\\'s turn';\n    }\n\n    return (\n    <div className=\"container\">\n        <h1 className=\"status\">{status}</h1>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n        <form action={this.restart()}>\n            <input type=\"submit\" value=\"New game\"/>\n        </form>\n    </div>\n    )\n  }\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}
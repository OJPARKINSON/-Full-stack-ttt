{"ast":null,"code":"var _jsxFileName = \"/Users/ops03/Desktop/tic-tac-toe/front-end/src/components/board.js\";\nimport React from 'react';\nimport axios from 'axios';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      fc: 0\n    };\n  }\n\n  componentDidMount() {\n    var name = prompt(\"What is your name?\");\n    this.setState({\n      inputName: name\n    });\n    this.getUser(name);\n  }\n\n  renderSquare(i) {\n    return React.createElement(\"button\", {\n      onClick: () => this.handlePick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, this.state.squares[i]);\n  }\n\n  handlePick(i) {\n    const squares = this.state.squares.slice();\n\n    if (this.winner(squares) || squares[i]) {\n      return;\n    }\n\n    if (this.full(squares) === true) {\n      return;\n    }\n\n    var huPlayer = \"O\";\n    var aiPlayer = \"X\";\n    squares[i] = this.state.isNext ? aiPlayer : huPlayer;\n    this.setState({\n      squares: squares,\n      isNext: !this.state.isNext\n    });\n  }\n\n  emptyIndexies(board) {\n    return board.filter(s => s != \"O\" && s != \"X\");\n  }\n\n  minimax(newBoard) {\n    //add one to function calls\n    this.setState({\n      fc: this.state.fc + 1\n    });\n    console.log(this.state.fc); //available spots\n\n    var availSpots = emptyIndexies(newBoard); // checks for the terminal states such as win, lose, and tie and returning a value accordingly\n\n    if (winning(newBoard, huPlayer)) {\n      return {\n        score: -10\n      };\n    } else if (winning(newBoard, aiPlayer)) {\n      return {\n        score: 10\n      };\n    } else if (availSpots.length === 0) {\n      return {\n        score: 0\n      };\n    }\n  }\n\n  full(squares) {\n    let count = 0;\n    squares.forEach(function (item) {\n      if (item !== null) {\n        count++;\n      }\n    });\n\n    if (count === 9) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  winning(board, player) {\n    if (board[0] == player && board[1] == player && board[2] == player || board[3] == player && board[4] == player && board[5] == player || board[6] == player && board[7] == player && board[8] == player || board[0] == player && board[3] == player && board[6] == player || board[1] == player && board[4] == player && board[7] == player || board[2] == player && board[5] == player && board[8] == player || board[0] == player && board[4] == player && board[8] == player || board[2] == player && board[4] == player && board[6] == player) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    const winner = this.winner(this.state.squares);\n    const isFilled = this.full(this.state.squares);\n    let status;\n\n    if (winner) {\n      status = 'The winner is: ' + winner;\n    } else if (!winner && isFilled) {\n      status = 'Game drawn';\n    } else {\n      status = 'Now ' + (this.state.isNext ? 'X' : 'O') + '\\'s turn';\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, status), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)), React.createElement(\"form\", {\n      action: this.restart(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"New game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/ops03/Desktop/tic-tac-toe/front-end/src/components/board.js"],"names":["React","axios","Board","Component","constructor","props","state","squares","Array","fill","fc","componentDidMount","name","prompt","setState","inputName","getUser","renderSquare","i","handlePick","slice","winner","full","huPlayer","aiPlayer","isNext","emptyIndexies","board","filter","s","minimax","newBoard","console","log","availSpots","winning","score","length","count","forEach","item","player","render","isFilled","status","restart"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {squares: Array(9).fill(null), fc: 0};\n    }\n    componentDidMount() {\n        var name = prompt(\"What is your name?\");\n        this.setState({inputName: name})\n        this.getUser(name);\n      }\n\n    renderSquare(i) {\n        return <button onClick={() => this.handlePick(i)}>{this.state.squares[i]}</button>\n    }\n\n    handlePick(i) {\n        const squares = this.state.squares.slice();\n\t\tif (this.winner(squares) || squares[i]) {\n            return;\n\t\t}\n\n\t\tif(this.full(squares) === true) {\n\t\t\treturn;\n\t\t}\n        var huPlayer = \"O\";\n        var aiPlayer = \"X\";\n\n\t\tsquares[i] = this.state.isNext ? aiPlayer : huPlayer;\n\t\tthis.setState({\n\t\t\tsquares: squares,\n\t\t\tisNext: !this.state.isNext\n\t\t});\n    }\n\n    emptyIndexies(board){\n        return board.filter(s => s != \"O\" && s != \"X\");\n    }\n\n    minimax(newBoard){\n        //add one to function calls\n        this.setState({fc: this.state.fc + 1});\n        console.log(this.state.fc);\n        //available spots\n        var availSpots = emptyIndexies(newBoard);\n      \n        // checks for the terminal states such as win, lose, and tie and returning a value accordingly\n        if (winning(newBoard, huPlayer)){\n           return {score:-10};\n        }\n          else if (winning(newBoard, aiPlayer)){\n          return {score:10};\n          }\n        else if (availSpots.length === 0){\n            return {score:0};\n        }\n    }\n\n    full(squares) {\n        let count = 0;\n        squares.forEach(function (item) {\n            if (item !== null) {\n                count++;\n            }\n        });\n        if(count === 9) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    winning(board, player) {\n        if (\n            (board[0] == player && board[1] == player && board[2] == player) ||\n            (board[3] == player && board[4] == player && board[5] == player) ||\n            (board[6] == player && board[7] == player && board[8] == player) ||\n            (board[0] == player && board[3] == player && board[6] == player) ||\n            (board[1] == player && board[4] == player && board[7] == player) ||\n            (board[2] == player && board[5] == player && board[8] == player) ||\n            (board[0] == player && board[4] == player && board[8] == player) ||\n            (board[2] == player && board[4] == player && board[6] == player)\n            ) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    \n\n  render() {\n    const winner = this.winner(this.state.squares);\n    const isFilled = this.full(this.state.squares);\n    let status;\n    if (winner) {\n        status = 'The winner is: ' + winner;\n    } else if(!winner && isFilled) {\n        status = 'Game drawn';\n    } else {\n        status = 'Now ' + (this.state.isNext ? 'X' : 'O') + '\\'s turn';\n    }\n\n    return (\n    <div className=\"container\">\n        <h1 className=\"status\">{status}</h1>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n        <form action={this.restart()}>\n            <input type=\"submit\" value=\"New game\"/>\n        </form>\n    </div>\n    )\n  }\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}